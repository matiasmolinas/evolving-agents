################################################################################
# Evolving Agents Toolkit - Example Environment Configuration                  #
#                                                                              #
# Copy this file to .env and fill in your specific values.                     #
# This example is configured primarily for local development using             #
# MongoDB Atlas CLI Local Deployment for the database.                         #
################################################################################

#################################
### Core LLM Configuration      ###
#################################

# Your OpenAI API Key is REQUIRED for most functionalities.
# Get one from https://platform.openai.com/api-keys
OPENAI_API_KEY="your-openai-api-key-here"

# --- LLM Provider and Models ---
# EAT uses LiteLLM (via BeeAI Framework) for broader LLM compatibility.
# "openai" is the default provider for LLMService.
LLM_PROVIDER="openai"

# Default chat model for generation tasks (e.g., SystemAgent, ArchitectZero).
# Options: "gpt-4o-mini", "gpt-4o", "gpt-4-turbo", "gpt-3.5-turbo", etc.
# Or models from other providers if LLM_PROVIDER is changed (e.g., "ollama/llama3").
LLM_MODEL="gpt-4o-mini"

# Default embedding model for semantic search, SmartLibrary, SmartMemory.
# Ensure this matches the `numDimensions` used when creating MongoDB Vector Search Indexes.
# "text-embedding-3-small" -> 1536 dimensions
# "text-embedding-3-large" -> 3072 dimensions
# "ollama/nomic-embed-text" -> typically 768 dimensions (verify your Ollama model)
LLM_EMBEDDING_MODEL="text-embedding-3-small"

# --- LLM Caching (MongoDB Backend) ---
# Enable LLM caching to save on API calls and speed up repeated operations.
# The cache is stored in MongoDB in the `eat_llm_cache` collection.
LLM_USE_CACHE="true"
# LLM_CACHE_DIR is for the old file-based cache, less relevant if LLM_USE_CACHE is true and MongoDB is configured.
# LLM_CACHE_DIR=".llm_cache"

###################################################
### MongoDB Configuration (Atlas CLI Local Dev) ###
###################################################
# For local development and testing, it's highly recommended to use the
# MongoDB Atlas CLI Local Deployment as described in `docs/MONGO-SETUP.md`.
# This provides an Atlas-like environment with full Vector Search support.

# Connection URI for your Atlas CLI Local Deployment.
# This typically runs on localhost and port 27017 by default.
# No username/password is needed for default local Atlas deployments.
MONGODB_URI="mongodb://localhost:27017/"

# The name of the database EAT will use.
# Ensure you create the Vector Search Indexes (see docs/MONGO-SETUP.md)
# in THIS database within your local Atlas deployment.
MONGODB_DATABASE_NAME="evolving_agents_db"

#################################
### EAT Framework Settings      ###
#################################

# --- Intent Review System ---
# Enable or disable the human-in-the-loop Intent Review system.
INTENT_REVIEW_ENABLED="false" # Set to "true" to enable

# Comma-separated list of review levels if INTENT_REVIEW_ENABLED=true.
# Options: "design", "components", "intents"
# Example: INTENT_REVIEW_LEVELS="design,intents"
INTENT_REVIEW_LEVELS="design,components,intents"

# For interactive review tools (ApprovePlanTool, ComponentSelectionReviewTool, etc.)
# Set to "false" for non-interactive (e.g., automated tests or CI/CD where no human input).
INTENT_REVIEW_DEFAULT_INTERACTIVE="true"

# Directory where a *copy* of generated intent plans might be saved if review for 'intents' is active
# AND the ApprovePlanTool's output_path parameter is used. Primary storage is MongoDB.
INTENT_REVIEW_OUTPUT_PATH="intent_plans_output_copy" # Example: "output/intent_plans"

# Timeout in seconds for review tools waiting for human input in non-interactive mode.
INTENT_REVIEW_TIMEOUT="600" # 10 minutes

# --- BeeAI Framework Specific (Inherited) ---
# Log level for the underlying BeeAI framework components.
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
BEEAI_LOG_LEVEL="INFO"

# --- Optional: SmartAgentBus Configuration ---
# Path for the circuit breaker state file (JSON).
# Consider if this should also move to MongoDB in the future.
# AGENT_BUS_CIRCUIT_BREAKER_PATH="agent_bus_circuit_breakers.json"

# --- Optional: Other Configurations ---
# Example: If you had other configurable parameters for your agents or tools.
# MY_CUSTOM_SETTING="some_value"