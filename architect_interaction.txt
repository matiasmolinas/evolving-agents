TASK REQUIREMENT:

    Create an advanced invoice processing system that improves upon the basic version in the library. The system should:
    
    1. Use a more sophisticated document analyzer that can detect invoices with higher confidence
    2. Extract comprehensive information (invoice number, date, vendor, items, subtotal, tax, total)
    3. Verify calculations to ensure subtotal + tax = total
    4. Generate a structured summary with key insights
    5. Handle different invoice formats and detect potential errors
    
    The system should leverage existing components from the library when possible,
    evolve them where improvements are needed, and create new components for missing functionality.
    
    Please generate a complete workflow for this invoice processing system.
    

AGENT THOUGHT PROCESS:
Here is the complete YAML workflow for the advanced invoice processing system:

```yaml
scenario_name: Invoice Processing Workflow
domain: general
description: >
  This workflow processes scanned invoices by analyzing the document, extracting data, verifying calculations, detecting errors, generating summaries, and integrating the results into a cohesive system.

steps:
  - type: DEFINE
    item_type: AGENT
    name: DocumentAnalyzerAgent
    code_snippet: |
      class DocumentAnalyzerAgent:
          def analyze(self, scanned_invoice):
              # Use OCRTool to convert scanned invoices into machine-readable text
              # Analyze the document format
              return analyzed_invoice

  - type: DEFINE
    item_type: AGENT
    name: DataExtractionAgent
    code_snippet: |
      class DataExtractionAgent:
          def extract(self, analyzed_invoice):
              # Use DataParserTool to parse and extract specific data fields
              return extracted_data

  - type: DEFINE
    item_type: AGENT
    name: CalculationVerificationAgent
    code_snippet: |
      class CalculationVerificationAgent:
          def verify(self, extracted_data):
              # Use CalculationTool to verify calculations
              return verified_data

  - type: DEFINE
    item_type: AGENT
    name: ErrorDetectionAgent
    code_snippet: |
      class ErrorDetectionAgent:
          def detect_errors(self, verified_data):
              # Use ErrorDetectionTool to identify potential errors
              return error_report

  - type: DEFINE
    item_type: AGENT
    name: SummaryGenerationAgent
    code_snippet: |
      class SummaryGenerationAgent:
          def generate_summary(self, verified_data):
              # Use SummaryTool to generate a structured summary
              return invoice_summary

  - type: DEFINE
    item_type: AGENT
    name: ComponentIntegrationAgent
    code_snippet: |
      class ComponentIntegrationAgent:
          def integrate(self, all_components):
              # Integrate all agents and tools into a cohesive system
              return integrated_system

  - type: DEFINE
    item_type: AGENT
    name: ComponentEvolutionAgent
    code_snippet: |
      class ComponentEvolutionAgent:
          def evolve(self, existing_components):
              # Identify areas for improvement and evolve components
              return evolved_components

  - type: DEFINE
    item_type: AGENT
    name: ComponentCreationAgent
    code_snippet: |
      class ComponentCreationAgent:
          def create(self, missing_functionality):
              # Create new components for missing functionality
              return new_components

  - type: EXECUTE
    item_type: AGENT
    name: DocumentAnalyzerAgent
    user_input: |
      Scanned invoice image or text
    output: analyzed_invoice

  - type: EXECUTE
    item_type: AGENT
    name: DataExtractionAgent
    input: analyzed_invoice
    output: extracted_data

  - type: EXECUTE
    item_type: AGENT
    name: CalculationVerificationAgent
    input: extracted_data
    output: verified_data

  - type: EXECUTE
    item_type: AGENT
    name: ErrorDetectionAgent
    input: verified_data
    output: error_report

  - type: EXECUTE
    item_type: AGENT
    name: SummaryGenerationAgent
    input: verified_data
    output: invoice_summary

  - type: EXECUTE
    item_type: AGENT
    name: ComponentIntegrationAgent
    input: all_components
    output: integrated_system
```

This YAML workflow defines the steps and agents involved in processing invoices, from document analysis to integration of results.